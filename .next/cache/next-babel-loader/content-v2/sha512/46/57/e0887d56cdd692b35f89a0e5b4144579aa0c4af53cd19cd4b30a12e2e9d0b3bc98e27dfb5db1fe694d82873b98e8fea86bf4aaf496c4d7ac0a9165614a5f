{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\IRA\\\\Desktop\\\\React\\\\react-nextjs-meetups\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/IRA/Desktop/React/react-nextjs-meetups/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;AAEA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,sBACI,QAAC,YAAD;AAEI,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAF5B;AAGI,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAH5B;AAII,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAJ9B;AAKI,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AALlC;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;KATQN,a;;AA6DT,eAAeA,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\"\r\n\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\"\r\n\r\nfunction MeetupDetails(props) {\r\n    return(\r\n        <MeetupDetail \r\n\r\n            image={props.meetupData.image}\r\n            title={props.meetupData.title}\r\n            address={props.meetupData.address}\r\n            description={props.meetupData.description} />\r\n    )\r\n}\r\n\r\nexport async function getStaticPaths(){\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://Ira0211:3EL2u8ync3isqKn@cluster0.9auyg.mongodb.net/meetups?retryWrites=true&w=majority')\r\n    const db = client.db()\r\n\r\n    const meetupsCollection = db.collection('meetups')\r\n\r\n    const meetups= await meetupsCollection.find({}, {_id:1}).toArray()\r\n\r\n    client.close()\r\n\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(\r\n            meetup => (\r\n                { \r\n                    params: { \r\n                        meetupId: meetup._id.toString()\r\n                    }\r\n                }\r\n            )\r\n        )\r\n    }\r\n}\r\n\r\nexport async function getStaticProps(context){\r\n    const meetupId = context.params.meetupId\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://Ira0211:3EL2u8ync3isqKn@cluster0.9auyg.mongodb.net/meetups?retryWrites=true&w=majority')\r\n    const db = client.db()\r\n\r\n    const meetupsCollection = db.collection('meetups')\r\n\r\n    const selectedMeetup= await meetupsCollection.findOne({_id:ObjectId(meetupId)})\r\n\r\n\r\n    client.close()\r\n    return {\r\n        props: {\r\n            meetupData:{\r\n                id: selectedMeetup._id.toString(),\r\n                title:selectedMeetup.title,\r\n                image:selectedMeetup.image,\r\n                address:selectedMeetup.address,\r\n                description:selectedMeetup.description\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default MeetupDetails"]},"metadata":{},"sourceType":"module"}