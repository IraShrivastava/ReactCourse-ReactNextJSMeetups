{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\IRA\\\\Desktop\\\\React\\\\react-nextjs-meetups\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n    title: \"A First Meetup\",\n    address: \"Some Street 5, Some City\",\n    description: \"The meetup description\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://Ira0211:3EL2u8ync3isqKn@cluster0.9auyg.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://Ira0211:3EL2u8ync3isqKn@cluster0.9auyg.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: meetupId\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: selectedMeetup\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/IRA/Desktop/React/react-nextjs-meetups/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetails","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","props","meetupData"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,GAAyB;AACrB,sBACI,QAAC,YAAD;AACI,IAAA,KAAK,EAAC,wHADV;AAEI,IAAA,KAAK,EAAC,gBAFV;AAGI,IAAA,OAAO,EAAC,0BAHZ;AAII,IAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;AAED,OAAO,eAAeC,cAAf,GAA+B;AAElC,QAAMC,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CAAoB,sGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAE,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAACC,IAAAA,GAAG,EAAC;AAAL,GAA3B,EAAoCC,OAApC,EAArB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CACHC,MAAM,KACF;AACIC,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADN;AADZ,KADE,CADH;AAFJ,GAAP;AAYH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAsC;AACzC,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMf,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CAAoB,sGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMe,cAAc,GAAE,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAACb,IAAAA,GAAG,EAACQ;AAAL,GAA1B,CAA5B;AAGAf,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACHY,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAEH;AADT;AADJ,GAAP;AAKH;AAED,eAAerB,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\"\r\n\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\"\r\n\r\nfunction MeetupDetails() {\r\n    return(\r\n        <MeetupDetail \r\n            image=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\"\r\n            title=\"A First Meetup\"\r\n            address=\"Some Street 5, Some City\"\r\n            description=\"The meetup description\" />\r\n    )\r\n}\r\n\r\nexport async function getStaticPaths(){\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://Ira0211:3EL2u8ync3isqKn@cluster0.9auyg.mongodb.net/meetups?retryWrites=true&w=majority')\r\n    const db = client.db()\r\n\r\n    const meetupsCollection = db.collection('meetups')\r\n\r\n    const meetups= await meetupsCollection.find({}, {_id:1}).toArray()\r\n\r\n    client.close()\r\n\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(\r\n            meetup => (\r\n                { \r\n                    params: { \r\n                        meetupId: meetup._id.toString()\r\n                    }\r\n                }\r\n            )\r\n        )\r\n    }\r\n}\r\n\r\nexport async function getStaticProps(context){\r\n    const meetupId = context.params.meetupId\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://Ira0211:3EL2u8ync3isqKn@cluster0.9auyg.mongodb.net/meetups?retryWrites=true&w=majority')\r\n    const db = client.db()\r\n\r\n    const meetupsCollection = db.collection('meetups')\r\n\r\n    const selectedMeetup= await meetupsCollection.findOne({_id:meetupId})\r\n\r\n\r\n    client.close()\r\n    return {\r\n        props: {\r\n            meetupData: selectedMeetup\r\n        }\r\n    }\r\n}\r\n\r\nexport default MeetupDetails"]},"metadata":{},"sourceType":"module"}